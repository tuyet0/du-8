{"version":3,"file":"static/js/299.35cbdce0.chunk.js","mappings":"saA+BAA,EAAAA,MAAMC,SAAS,wBAAyBC,EAAAA,GAKxC,IAuOA,EAvOmB,WACjB,IAAAC,GAAiBC,EAAAA,EAAAA,MACXC,GAD4BC,EAAAA,EAAAA,GAAAH,EAAA,GAArB,GACSI,IAAI,MAC1BC,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAJ,EAAAA,EAAAA,GAAAE,EAAA,GAAzCG,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAChCG,GAA8BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAnCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA4CR,EAAAA,EAAAA,UAAS,IAAGS,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,GAA6FC,EAAAA,EAAAA,IAAQ,CACnGC,KAAM,WACNC,cAAe,CACbC,OAAQ,EACRC,MAAO,GACPC,KAAM,GACNC,KAAK,EACLC,MAAO,GACPC,SAAU,CAAC,EACXC,KAAM,CAAC,KATHC,EAAOX,EAAPW,QAASC,EAAKZ,EAALY,MAAOC,EAAQb,EAARa,SAAUC,EAASd,EAATc,UAAWC,EAAYf,EAAZe,aAAcC,EAAKhB,EAALgB,MAAiBC,EAAYjB,EAAvBkB,UAAWD,aAYtEE,EAAcP,EAAM,UACpBQ,EAAWR,EAAM,OACjBS,EAAYP,EAAU,cACtBQ,EAAWR,EAAU,SAC3BS,GAMIC,EAAAA,EAAAA,GAAiBX,EAAUC,EAAWO,GAA4B,WACxC,OAAAI,GAAAC,MAAC,KAADC,UAAA,IAN5BnB,EAAKe,EAALf,MACAoB,EAAQL,EAARK,SACAC,GAAQN,EAARM,SACAC,GAAiBP,EAAjBO,kBACAC,GAAiBR,EAAjBQ,kBAE4B,SAAAN,KAK7B,OAL6BA,IAAAO,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA9B,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACyC,OAAjCJ,GAASK,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAAS1D,GAAOsD,EAAAE,KAAA,GACjCG,EAAAA,EAAAA,IAAUP,EAAQ,CACtBQ,WAAY,KACX,KAAD,mBAAAN,EAAAO,OAAA,GAAAV,EAAA,MACHT,MAAA,KAAAC,UAAA,CACD,IAAMmB,GAAgB,eAAAC,GAAAf,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAc,EAAOC,GAAM,IAAAC,EAAA,OAAAjB,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,OAEG,OADvCS,EAAO3C,KAAO8C,IAAQH,EAAO3C,MAAQ2C,EAAO5C,MAAO,CAAEgD,OAAO,IACtDH,GAAST,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAAS1D,GAAOmE,EAAAX,KAAA,GACjCG,EAAAA,EAAAA,IAAUO,GAAMI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjBL,GAAM,IACTzC,MAAAA,EACAd,QAAAA,KACA,OACF6D,EAAAA,GAAMC,QAAQ,4BAA4B,wBAAAL,EAAAN,OAAA,GAAAG,EAAA,KAC3C,gBATqBS,GAAA,OAAAV,EAAArB,MAAA,KAAAC,UAAA,KAUhB+B,GAAkB,eAAAC,GAAA3B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA0B,EAAOC,GAAM,IAAAzB,EAAA0B,EAAA,OAAA7B,EAAAA,EAAAA,KAAAI,MAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,OACS,OAAzCJ,GAASK,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,aAAcmB,EAAOG,IAAGD,EAAAvB,KAAA,GACzByB,EAAAA,EAAAA,IAAO7B,GAAQ,KAAD,EAA9B0B,EAAOC,EAAAG,KACbrD,EAAS,YAAUyC,EAAAA,EAAAA,GAAA,CACjBU,GAAIF,EAAQE,IACTF,EAAQK,SAEbpE,EAAkB8D,GAAQ,wBAAAE,EAAAlB,OAAA,GAAAe,EAAA,KAC3B,gBARuBQ,GAAA,OAAAT,EAAAjC,MAAA,KAAAC,UAAA,MASxB0C,EAAAA,EAAAA,YAAU,WACc,SAAAC,IASrB,OATqBA,GAAAtC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAtB,SAAAqC,IAAA,IAAAC,EAAApC,EAAAqC,EAAA,OAAAxC,EAAAA,EAAAA,KAAAI,MAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,OAGyB,OAFnBgC,EAAU,GACRpC,GAASuC,EAAAA,EAAAA,IAAWjC,EAAAA,GAAI,cACxB+B,GAAIG,EAAAA,EAAAA,IAAMxC,GAAOsC,EAAAlC,KAAA,GACKqC,EAAAA,EAAAA,IAAQJ,GAAG,KAAD,EAAnBC,EAAAR,KACLY,SAAQ,SAACrC,GACrB+B,EAAQO,MAAIzB,EAAAA,EAAAA,GAAC,CAAEU,GAAIvB,EAAIuB,IAAOvB,EAAI0B,QACpC,IACA5E,EAAciF,GAAS,wBAAAE,EAAA7B,OAAA,GAAA0B,EAAA,MACxB7C,MAAA,KAAAC,UAAA,EAVc,WACO2C,EAAA5C,MAAC,KAADC,UAAA,CAUtBqD,EACF,GAAG,KACHX,EAAAA,EAAAA,YAAU,WACRzC,EAASN,EACX,GAAG,CAACA,EAAUM,KACdyC,EAAAA,EAAAA,YAAU,WACgB,SAAAY,IASvB,OATuBA,GAAAjD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAxB,SAAAgD,IAAA,IAAAhC,EAAAiC,EAAAC,EAAAC,EAAA,OAAApD,EAAAA,EAAAA,KAAAI,MAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,UACOxD,EAAO,CAADsG,EAAA9C,KAAA,eAAA8C,EAAAC,OAAA,SAAS,MAAI,OACe,OAAjCrC,GAAST,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAAS1D,GAAOsG,EAAA9C,KAAA,GACbyB,EAAAA,EAAAA,IAAOf,GAAQ,KAAD,GAAlCiC,EAAWG,EAAApB,MACDC,OACdnD,EAAMmE,EAAYhB,QAClBpE,GAAoC,QAAlBqF,EAAAD,EAAYhB,cAAM,IAAAiB,OAAA,EAAlBA,EAAoB3E,WAAY,IAClDd,GAA6B,QAAlB0F,EAAAF,EAAYhB,cAAM,IAAAkB,OAAA,EAAlBA,EAAoB3F,UAAW,KAC3C,wBAAA4F,EAAAzC,OAAA,GAAAqC,EAAA,MACFxD,MAAA,KAAAC,UAAA,EAVc,WACSsD,EAAAvD,MAAC,KAADC,UAAA,CAUxB6D,EACF,GAAG,CAACxG,EAAQgC,IACZ,IAAMyE,IAAUC,EAAAA,EAAAA,UAAQ,iBAAM,CAC5BC,QAAS,CACP,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,cACD,CAAC,CAAEC,OAAQ,GAAK,CAAEA,OAAQ,IAC1B,CAAC,CAAEC,KAAM,WAAa,CAAEA,KAAM,WAC9B,CAAC,CAAED,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAC9B,CAAC,OAAQ,UAEXE,cAAc,CACZC,OAAO,WAAD,IAAAC,GAAAhE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAA+D,EAAMC,GAAI,IAAAC,EAAAC,EAAA,OAAAnE,EAAAA,EAAAA,KAAAI,MAAA,SAAAgE,GAAA,cAAAA,EAAA9D,KAAA8D,EAAA7D,MAAA,OAEoB,OAD7B2D,EAAe,IAAIG,UACZC,OAAO,QAASL,GAAMG,EAAA7D,KAAA,GACZgE,EAAAA,EAAAA,GAAM,CAC3BC,OAAQ,OACRC,ICtIW,sEDuIXvC,KAAMgC,EACNQ,QAAS,CACP,eAAgB,yBAEjB,KAAD,EAPY,OAARP,EAAQC,EAAAnC,KAAAmC,EAAAd,OAAA,SAQPa,EAASjC,KAAKA,KAAKuC,KAAG,wBAAAL,EAAAxD,OAAA,GAAAoD,EAAA,KAC9B,gBAAAW,GAAA,OAAAZ,EAAAtE,MAAA,KAAAC,UAAA,EAZM,IAcV,GAAE,IACH,OAAK3C,GAEH6H,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAgB,CACf5G,MAAM,cACN6G,KAAK,cACLC,UAAU,uBAEZN,EAAAA,EAAAA,MAAA,QAAMO,SAAUrG,EAAa+B,IAAkBiE,SAAA,EAC7CF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,kCAAiCJ,SAAA,EAC9CF,EAAAA,EAAAA,MAACQ,EAAAA,EAAK,CAAAN,SAAA,EACJC,EAAAA,EAAAA,KAACM,EAAAA,EAAK,CAAAP,SAAC,WACPC,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CACJ5G,QAASA,EACT6G,YAAY,mBACZC,KAAK,cAITZ,EAAAA,EAAAA,MAACQ,EAAAA,EAAK,CAAAN,SAAA,EACJC,EAAAA,EAAAA,KAACM,EAAAA,EAAK,CAAAP,SAAC,UACPC,EAAAA,EAAAA,KAACO,EAAAA,EAAK,CACJ5G,QAASA,EACT6G,YAAY,kBACZC,KAAK,gBAIXZ,EAAAA,EAAAA,MAAA,OAAKM,UAAU,kCAAiCJ,SAAA,EAC9CF,EAAAA,EAAAA,MAACQ,EAAAA,EAAK,CAAAN,SAAA,EACJC,EAAAA,EAAAA,KAACM,EAAAA,EAAK,CAAAP,SAAC,WACPC,EAAAA,EAAAA,KAACU,EAAAA,EAAW,CACVlH,MAAOA,EACPqB,SAAUA,GACV8F,KAAK,OACLF,KAAK,QACLG,SAAU9F,GACVC,kBAAmBA,SAIvB8E,EAAAA,EAAAA,MAACQ,EAAAA,EAAK,CAAAN,SAAA,EACJC,EAAAA,EAAAA,KAACM,EAAAA,EAAK,CAAAP,SAAC,cACPF,EAAAA,EAAAA,MAACgB,EAAAA,EAAQ,CAAAd,SAAA,EACPC,EAAAA,EAAAA,KAACa,EAAAA,EAASC,OAAM,CAACN,YAAY,yBAC7BR,EAAAA,EAAAA,KAACa,EAAAA,EAASE,KAAI,CAAAhB,SACXzH,EAAW0I,KAAI,SAACnE,GAAM,OACrBmD,EAAAA,EAAAA,KAACa,EAAAA,EAASI,OAAM,CAEdC,QAAS,kBAAMxE,GAAmBG,EAAO,EAACkD,SAEzClD,EAAO4D,MAHH5D,EAAOG,GAII,UAIT,OAAdlE,QAAc,IAAdA,OAAc,EAAdA,EAAgB2H,QACfT,EAAAA,EAAAA,KAAA,QAAMG,UAAU,gFAA+EJ,SAC9E,OAAdjH,QAAc,IAAdA,OAAc,EAAdA,EAAgB2H,cAKzBZ,EAAAA,EAAAA,MAAA,OAAKM,UAAU,kCAAiCJ,SAAA,EAC9CF,EAAAA,EAAAA,MAACQ,EAAAA,EAAK,CAAAN,SAAA,EACJC,EAAAA,EAAAA,KAACM,EAAAA,EAAK,CAAAP,SAAC,iBACPC,EAAAA,EAAAA,KAACmB,EAAAA,EAAM,CACLC,IAAiB,IAAbhH,EACJ8G,QAAS,kBAAMrH,EAAS,OAAQO,EAAS,QAG7CyF,EAAAA,EAAAA,MAACQ,EAAAA,EAAK,CAAAN,SAAA,EACJC,EAAAA,EAAAA,KAACM,EAAAA,EAAK,CAAAP,SAAC,YACPF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,4BAA2BJ,SAAA,EACxCC,EAAAA,EAAAA,KAACqB,EAAAA,EAAK,CACJZ,KAAK,SACL9G,QAASA,EACT2H,QAASC,OAAOpH,KAAiBqH,EAAAA,GAAWC,SAC5CC,MAAOF,EAAAA,GAAWC,SAAS1B,SAC5B,cAGDC,EAAAA,EAAAA,KAACqB,EAAAA,EAAK,CACJZ,KAAK,SACL9G,QAASA,EACT2H,QAASC,OAAOpH,KAAiBqH,EAAAA,GAAWG,QAC5CD,MAAOF,EAAAA,GAAWG,QAAQ5B,SAC3B,aAGDC,EAAAA,EAAAA,KAACqB,EAAAA,EAAK,CACJZ,KAAK,SACL9G,QAASA,EACT2H,QAASC,OAAOpH,KAAiBqH,EAAAA,GAAWI,SAC5CF,MAAOF,EAAAA,GAAWI,SAAS7B,SAC5B,qBAMPC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOJ,UACtBF,EAAAA,EAAAA,MAACQ,EAAAA,EAAK,CAAAN,SAAA,EACJC,EAAAA,EAAAA,KAACM,EAAAA,EAAK,CAAAP,SAAC,aACPC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gCAA+BJ,UAC5CC,EAAAA,EAAAA,KAAC6B,IAAU,CAACpD,QAASA,GAASqD,MAAM,OAAOJ,MAAOhJ,EAASkI,SAAUjI,YAIzEqH,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,CACLC,UAAW/H,EACXgI,SAAUhI,EACViI,KAAK,UACLvB,KAAK,SACLR,UAAU,oBAAmBJ,SAC9B,sBAnHa,IAyHtB,C","sources":["module/post/PostUpdate.js","config/apiConfig.js"],"sourcesContent":["import React, { useMemo } from \"react\";\nimport { useState } from \"react\";\nimport ReactQuill, { Quill } from \"react-quill\";\nimport { useForm } from \"react-hook-form\";\nimport Button from \"components/button/Button.js\";\nimport Radio from \"components/checkbox/Radio.js\";\nimport { Dropdown } from \"components/dropdown\";\nimport Field from \"components/field/Field.js\";\nimport ImageUpload from \"components/image/ImageUpload.js\";\nimport Input from \"components/input/Input.js\";\nimport Label from \"components/label/Label.js\";\nimport Toggle from \"components/toggle/Toggle.js\";\nimport useFirebaseImage from \"hooks/useFirebaseImage.js\";\nimport { postStatus } from \"utils/constants.js\";\nimport DashBoardHeading from \"../dashboard/DashBoardHeading.js\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport ImageUploader from \"quill-image-uploader\";\nimport {\n  doc,\n  getDoc,\n  updateDoc,\n  collection,\n  query,\n  getDocs,\n} from \"firebase/firestore\";\nimport { db } from \"firebase-app/firebase-config.js\";\nimport { toast } from \"react-toastify\";\nimport { imgbbAPI } from \"../../config/apiConfig.js\";\nimport axios from \"../../../node_modules/axios/index.js\";\nimport slugify from \"../../../node_modules/slugify/slugify.js\";\nQuill.register(\"modules/imageUploader\", ImageUploader);\n\n\n\n\nconst PostUpdate = () => {\n  const [params] = useSearchParams();\n  const postId = params.get(\"id\");\n  const [categories, setCategories] = useState([]);\n  const [content, setContent] = useState(\"\")\n  const [selectCategory, setSelectCategory] = useState(\"\");\n  const { control, watch, setValue, getValues, handleSubmit, reset,formState:{isSubmitting}} = useForm({\n    mode: \"onChange\",\n    defaultValues: {\n      status: 1,\n      title: \"\",\n      slug: \"\",\n      hot: false,\n      image: \"\",\n      category: {},\n      user: {},\n    },\n  });\n  const watchStatus = watch(\"status\");\n  const watchHot = watch(\"hot\");\n  const imageName = getValues(\"image_name\");\n  const imageUrl = getValues(\"image\");\n  const {\n    image,\n    setImage,\n    progress,\n    handleSelectImage,\n    handleDeleteImage,\n  } = useFirebaseImage(setValue, getValues, imageName, deletePostImage);\n  async function deletePostImage() {\n    const colRef = doc(db, \"Posts\", postId);\n    await updateDoc(colRef, {\n      image_name: \"\",\n    });\n  }\n  const updatePostHandle = async (values) => {\n    values.slug = slugify(values.slug || values.title, { lower: true });\n    const docRef = doc(db, \"Posts\", postId);\n    await updateDoc(docRef, {\n      ...values,\n      image,\n      content,\n    })\n    toast.success(\"Update post successfully\");\n  };\n  const handleSelectOption = async (option) => {\n    const colRef = doc(db, \"Categories\", option.id);\n    const docData = await getDoc(colRef);\n    setValue(\"category\", {\n      id: docData.id,\n      ...docData.data(),\n    });\n    setSelectCategory(option);\n  };\n  useEffect(() => {\n    async function getData() {\n      let results = [];\n      const colRef = collection(db, \"Categories\");\n      const q = query(colRef);\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach((doc) => {\n        results.push({ id: doc.id, ...doc.data() });\n      });\n      setCategories(results);\n    }\n    getData();\n  }, []);\n  useEffect(() => {\n    setImage(imageUrl);\n  }, [imageUrl, setImage]);\n  useEffect(() => {\n    async function fetchData() {\n      if (!postId) return null;\n      const docRef = doc(db, \"Posts\", postId);\n      const docSnapshot = await getDoc(docRef);\n      if (docSnapshot.data) {\n        reset(docSnapshot.data());\n        setSelectCategory(docSnapshot.data()?.category || \"\");\n        setContent(docSnapshot.data()?.content || \"\");\n      }\n    }\n    fetchData();\n  }, [postId, reset]);\n  const modules = useMemo(()=> ({\n    toolbar: [\n      [\"bold\", \"italic\", \"underline\", \"strike\"],\n      [\"blockquote\"],\n      [{ header: 1 }, { header: 2 }], // custom button values\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\n      [\"link\", \"image\"],\n    ],\n    imageUploader:{\n      upload:async(file)=>{\n        const bodyFormData = new FormData();\n        bodyFormData.append(\"image\", file);\n        const response = await axios({\n          method: \"post\",\n          url: imgbbAPI,\n          data: bodyFormData,\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        });\n        return response.data.data.url;\n      }\n    }\n  }),[])\n  if (!postId) return null;\n  return (\n    <>\n      <DashBoardHeading\n        title=\"Update post\"\n        desc=\"Update post\"\n        className=\"dashboard-heading\"\n      ></DashBoardHeading>\n      <form onSubmit={handleSubmit(updatePostHandle)}>\n        <div className=\"grid grid-cols-2 mb-10 gap-x-10\">\n          <Field>\n            <Label>Title</Label>\n            <Input\n              control={control}\n              placeholder=\"Enter your title\"\n              name=\"title\"\n            ></Input>\n          </Field>\n\n          <Field>\n            <Label>Slug</Label>\n            <Input\n              control={control}\n              placeholder=\"Enter your slug\"\n              name=\"slug\"\n            ></Input>\n          </Field>\n        </div>\n        <div className=\"grid grid-cols-2 mb-10 gap-x-10\">\n          <Field>\n            <Label>Image</Label>\n            <ImageUpload\n              image={image}\n              progress={progress}\n              type=\"file\"\n              name=\"image\"\n              onChange={handleSelectImage}\n              handleDeleteImage={handleDeleteImage}\n            />\n          </Field>\n\n          <Field>\n            <Label>Category</Label>\n            <Dropdown>\n              <Dropdown.Select placeholder=\"Select the category\"></Dropdown.Select>\n              <Dropdown.List>\n                {categories.map((option) => (\n                  <Dropdown.Option\n                    key={option.id}\n                    onClick={() => handleSelectOption(option)}\n                  >\n                    {option.name}\n                  </Dropdown.Option>\n                ))}\n              </Dropdown.List>\n            </Dropdown>\n            {selectCategory?.name && (\n              <span className=\"inline-block p-3 mt-1 text-sm font-medium bg-green-200 rounded-lg color-green\">\n                {selectCategory?.name}\n              </span>\n            )}\n          </Field>\n        </div>\n        <div className=\"grid grid-cols-2 mb-10 gap-x-10\">\n          <Field>\n            <Label>Feature Hot</Label>\n            <Toggle\n              on={watchHot === true}\n              onClick={() => setValue(\"hot\", !watchHot)}\n            ></Toggle>\n          </Field>\n          <Field>\n            <Label>Status</Label>\n            <div className=\"flex items-center gap-x-5\">\n              <Radio\n                name=\"status\"\n                control={control}\n                checked={Number(watchStatus) === postStatus.APPROVED}\n                value={postStatus.APPROVED}\n              >\n                Approved\n              </Radio>\n              <Radio\n                name=\"status\"\n                control={control}\n                checked={Number(watchStatus) === postStatus.PENDING}\n                value={postStatus.PENDING}\n              >\n                Pending\n              </Radio>\n              <Radio\n                name=\"status\"\n                control={control}\n                checked={Number(watchStatus) === postStatus.REJECTED}\n                value={postStatus.REJECTED}\n              >\n                Reject\n              </Radio>\n            </div>\n          </Field>\n        </div>\n        <div className=\"mb-10\">\n        <Field>\n          <Label>Content</Label>\n          <div className=\"w-full bg-white entry-content\">\n            <ReactQuill modules={modules} theme=\"snow\" value={content} onChange={setContent} />\n          </div>\n        </Field>\n        </div>\n        <Button\n          isLoading={isSubmitting}\n          disabled={isSubmitting}\n          kind=\"primary\"\n          type=\"submit\"\n          className=\"mx-auto w-[250px]\"\n        >\n          Update post\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default PostUpdate;\n","export const imgbbAPI = `https://api.imgbb.com/1/upload?key=d7da753c0765f00dc045ddeb36929aa5`\n// d7da753c0765f00dc045ddeb36929aa5"],"names":["Quill","register","ImageUploader","_useSearchParams","useSearchParams","postId","_slicedToArray","get","_useState","useState","_useState2","categories","setCategories","_useState3","_useState4","content","setContent","_useState5","_useState6","selectCategory","setSelectCategory","_useForm","useForm","mode","defaultValues","status","title","slug","hot","image","category","user","control","watch","setValue","getValues","handleSubmit","reset","isSubmitting","formState","watchStatus","watchHot","imageName","imageUrl","_useFirebaseImage","useFirebaseImage","_deletePostImage","apply","arguments","setImage","progress","handleSelectImage","handleDeleteImage","_asyncToGenerator","_regeneratorRuntime","mark","_callee6","colRef","wrap","_context6","prev","next","doc","db","updateDoc","image_name","stop","updatePostHandle","_ref","_callee","values","docRef","_context","slugify","lower","_objectSpread","toast","success","_x","handleSelectOption","_ref2","_callee2","option","docData","_context2","id","getDoc","sent","data","_x2","useEffect","_getData","_callee3","results","q","_context3","collection","query","getDocs","forEach","push","getData","_fetchData","_callee4","docSnapshot","_docSnapshot$data","_docSnapshot$data2","_context4","abrupt","fetchData","modules","useMemo","toolbar","header","list","imageUploader","upload","_upload","_callee5","file","bodyFormData","response","_context5","FormData","append","axios","method","url","headers","_x3","_jsxs","_Fragment","children","_jsx","DashBoardHeading","desc","className","onSubmit","Field","Label","Input","placeholder","name","ImageUpload","type","onChange","Dropdown","Select","List","map","Option","onClick","Toggle","on","Radio","checked","Number","postStatus","APPROVED","value","PENDING","REJECTED","ReactQuill","theme","Button","isLoading","disabled","kind"],"sourceRoot":""}